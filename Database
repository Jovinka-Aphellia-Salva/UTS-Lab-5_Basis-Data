-- create table Customer (
-- 	id_Customer INT PRIMARY KEY NOT NULL,
-- 	Nama Text NOT NULL,
-- 	Alamat Text NOT NULL
-- )

-- INSERT INTO Customer (id_customer,Nama,Alamat)
-- VALUES (1001, 'Andreas', 'Martubung'),
-- 	   (1002, 'Venda', 'Binjai'),
-- 	   (1003, 'Zakry', 'Medan'),
-- 	   (1004, 'Jovinka', 'Marelan'),
-- 	   (1005, 'Najwa', 'Sibolga'),
-- 	   (1006, 'Kyla', 'Marelan'),
-- 	   (1007, 'Shifa', 'Medan'),
-- 	   (1008, 'Rio', 'Belawan'),
-- 	   (1009, 'Margareth', 'Martubung'),
-- 	   (1010, 'Tabitha', 'Medan'),
-- 	   (1011, 'Fico', 'Medan'),
-- 	   (1012, 'Lukman', 'Tebing Tinggi'),
-- 	   (1013, 'Briyan', 'Sibolga'),
-- 	   (1014, 'Fadlan', 'Medan'),
-- 	   (1015, 'Devia', 'Binjai')

-- create table Produk (
-- 	id_Produk INT PRIMARY KEY NOT NULL,
-- 	Nama_Produk Text NOT NULL,
-- 	Kategori Text NOT NULL,
-- 	Harga INT NOT NULL,
-- 	Stok INT NOT NULL,
-- 	Deskripsi Text
-- )

-- INSERT INTO Produk (id_Produk,Nama_Produk,Kategori,Harga,Stok, Deskripsi)
-- VALUES (1, 'Facial Wash', 'Skincare', 40000, 10, 'Mencerahkan'),
-- 	   (2, 'Toner', 'Skincare', 60000, 17, 'Melembabkan'),
-- 	   (3, 'Serum', 'Skincare', 100000, 28, 'Mencerahkan'),
-- 	   (4, 'Mosturizer', 'Skincare', 55000, 22, 'Melembabkan'),
-- 	   (5, 'Sunscreen', 'Skincare', 45000, 10, 'Melindungi'),
-- 	   (6, 'Masker', 'Skincare', 10000, 15, 'Melembutkan'),
-- 	   (7, 'Primer', 'Makeup', 75000, 10, 'Pore ranger'),
-- 	   (8, 'Foundation', 'Makeup', 150000, 25, 'Flawless'),
-- 	   (9, 'Conceler', 'Makeup', 85000, 50, 'Full coverage'),
-- 	   (10, 'Cushion', 'Makeup', 170000, 75, 'Stay matte'),
-- 	   (11, 'Eyeshadow', 'Makeup', 65000, 100, 'Pigmented'),
-- 	   (12, 'Liptint', 'Makeup', 30000, 25, 'Healthy Lips'),
-- 	   (13, 'Maskara', 'Makeup', 30000, 75, 'Waterproof'),
-- 	   (14, 'Eyeliner', 'Makeup', 45000, 28, 'Waterproof'),
-- 	   (15, 'Bronzer', 'Makeup', 20000, 265, 'Stay matte')

-- create table Pemesanan (
-- 	id_Pemesanan INT PRIMARY KEY NOT NULL,
-- 	id_Customer INT REFERENCES Customer(id_Customer),
--  	id_Produk INT REFERENCES Produk(id_Produk),
-- 	Tanggal_Pemesanan Date NOT NULL,
--  	Jumlah_Produk INT NOT NULL,
-- 	Total_Harga INT NOT NULL
-- )

-- INSERT INTO Pemesanan (id_Pemesanan,id_Customer,id_Produk,Tanggal_Pemesanan,Jumlah_Produk,Total_Harga)
-- VALUES (1101, 1003, 1, '2023-10-22', 2, 80000),
-- 	   (1102, 1005, 11, '2023-10-15', 3, 195000),
-- 	   (1103, 1007, 3, '2023-10-15', 1, 10000),
-- 	   (1104, 1010, 2, '2023-08-01', 1, 60000),
-- 	   (1105, 1011, 5, '2023-07-27', 2, 90000),
-- 	   (1106, 1001, 9, '2023-07-11', 5, 425000),
-- 	   (1107, 1004, 10, '2023-05-17', 5, 850000),
-- 	   (1108, 1002, 13, '2023-05-17', 3, 90000),
-- 	   (1109, 1008, 7, '2023-10-22', 4, 300000),
-- 	   (1110, 1009, 6, '2023-04-09', 4, 400000),
-- 	   (1111, 1015, 14, '2023-04-19', 5, 225000),
-- 	   (1112, 1013, 12, '2023-08-02', 1, 30000),
-- 	   (1113, 1014, 15, '2023-08-01', 1, 20000),
-- 	   (1114, 1012, 4, '2023-10-15', 2, 110000),
-- 	   (1115, 1006, 8, '2023-06-02', 2, 300000)

-- create table Transaksi (
-- 	id_Transaksi INT PRIMARY KEY NOT NULL,
-- 	id_Pemesanan INT REFERENCES Pemesanan(id_Pemesanan),
-- 	Metode_Pembayaran Text NOT NULL,
-- 	Biaya_Layanan INT NOT NULL,
-- 	Biaya_Penanganan INT NOT NULL,
-- 	Total_Diskon INT NOT NULL,
--  	Total_Pembayaran INT NOT NULL
-- )

-- INSERT INTO Transaksi (id_Transaksi,id_Pemesanan,Metode_Pembayaran,Biaya_Layanan,Biaya_Penanganan,Total_Diskon, Total_Pembayaran)
-- VALUES (101, 1115, 'COD', 1000, 5000, 11000, 295000),
-- 	   (102, 1110, 'BANK BRI', 1000, 1000, 5000, 397000),
-- 	   (103, 1101, 'ShopeePay', 1000, 1000, 6000, 76000),
-- 	   (104, 1107, 'ShopeePay', 1000, 1000, 7000, 845000),
-- 	   (105, 1114, 'BANK BNI', 1000, 1000, 8000, 104000),
-- 	   (106, 1105, 'COD', 1000, 5000, 10000, 86000),
-- 	   (107, 1111, 'COD', 1000, 5000, 11000, 220000),
-- 	   (108, 1103, 'BANK BRI', 1000, 1000, 8000, 4000),
-- 	   (109, 1112, 'BANK BCA', 1000, 1000, 7000, 25000),
-- 	   (110, 1106, 'BANK MANDIRI', 1000, 1000, 5000, 422000),
-- 	   (111, 1104, 'BANK MANDIRI', 1000, 1000, 12000, 53000),
-- 	   (112, 1102, 'BANK BCA', 1000, 1000, 8000, 189000),
-- 	   (113, 1113, 'COD', 1000, 5000, 8000, 18000),
-- 	   (114, 1109, 'ShopeePay', 1000, 1000, 5000, 297000),
-- 	   (115, 1108, 'BANK PERMATA', 1000, 1000, 7000, 85000)

-- create table Pengiriman (
-- 	id_Pengiriman INT PRIMARY KEY NOT NULL,
-- 	id_Pemesanan INT REFERENCES Pemesanan(id_Pemesanan),
-- 	Tgl_Pengiriman DATE NOT NULL
-- )

-- INSERT INTO Pengiriman (id_Pengiriman,id_Pemesanan,Tgl_Pengiriman)
-- VALUES (123, 1115, '2023-05-24'),
-- 	   (345, 1107, '2023-08-08'),
-- 	   (678, 1101, '2023-08-07'),
-- 	   (910, 1102, '2023-06-10'),
-- 	   (256, 1108, '2023-05-23'),
-- 	   (764, 1103, '2023-08-07'),
-- 	   (346, 1111, '2023-10-24'),
-- 	   (236, 1112, '2023-04-17'),
-- 	   (224, 1104, '2023-10-20'),
-- 	   (811, 1105, '2023-10-21'),
-- 	   (673, 1109, '2023-04-24'),
-- 	   (998, 1110, '2023-10-30'),
-- 	   (568, 1113, '2023-10-28'),
-- 	   (732, 1106, '2023-08-01'),
-- 	   (789, 1114, '2023-07-16')

-- //CUSTOMER
-- SELECT * FROM Customer
-- SELECT * FROM Customer WHERE Alamat <> 'Marelan'
-- SELECT * FROM Customer WHERE Alamat = 'Sibolga'
-- SELECT * FROM Customer WHERE id_customer > 1002
-- SELECT * FROM Customer WHERE id_customer <= 1008
-- SELECT * FROM Customer WHERE Alamat = 'Medan' OR Alamat = 'Martubung'
-- SELECT * FROM Customer WHERE NOT id_customer = 1009
-- SELECT * FROM Customer WHERE NOT Alamat = 'Belawan'
-- SELECT * FROM Customer WHERE id_customer IN (1001,1007)
-- SELECT Nama, Alamat FROM Customer WHERE id_Customer IN (1001,1005,1007)
-- SELECT * FROM Customer WHERE Alamat IN ('Martubung','Tebing Tinggi')
-- SELECT * FROM Customer WHERE id_customer NOT IN (1001,1007)
-- SELECT * FROM Customer WHERE Alamat NOT IN ('Martubung','Tebing Tinggi')
-- SELECT * FROM Customer WHERE id_customer BETWEEN 1004 AND 1010
-- SELECT * FROM Customer WHERE id_customer NOT BETWEEN 1008 AND 1011
-- SELECT * FROM Customer WHERE Nama LIKE '%an'
-- SELECT * FROM Customer WHERE Nama LIKE '_'
-- SELECT * FROM Customer WHERE Nama LIKE '%w%'
-- SELECT * FROM Customer WHERE Nama LIKE 'J%'
-- SELECT * FROM Customer WHERE id_customer > 1009 LIMIT 5
-- SELECT * FROM Customer WHERE Alamat = 'Medan' LIMIT 2
-- SELECT * FROM Customer WHERE Alamat = 'Medan' LIMIT 2 OFFSET 2
-- SELECT * FROM Customer ORDER BY id_customer DESC
-- SELECT * FROM Customer ORDER BY Alamat ASC
-- SELECT DISTINCT Alamat FROM Customer
-- SELECT COUNT(DISTINCT Alamat) FROM Customer
-- SELECT COUNT(DISTINCT Metode_Pembayaran) FROM Transaksi
-- SELECT Alamat AS Alt FROM Customer
-- SELECT id_customer AS ID, Nama AS Nm FROM Customer;
-- SELECT COUNT(Alamat) AS Alt, COUNT(DISTINCT Alamat) AS Address FROM Customer
-- SELECT Alamat FROM Customer GROUP BY Alamat
-- SELECT Customer . id_customer, Customer.Nama , Pemesanan.id_customer FROM Customer FULL OUTER JOIN Pemesanan ON Customer.id_customer=Pemesanan.id_Customer
-- SELECT Customer.Nama, Customer.Alamat, Pemesanan.id_Pemesanan, Pemesanan.Tanggal_Pemesanan FROM Customer LEFT JOIN Pemesanan ON customer.id_customer = Pemesanan.id_Customer

-- //PRODUK
-- SELECT * FROM Produk
-- SELECT * FROM Produk WHERE id_Produk = 10
-- SELECT * FROM Produk WHERE id_Produk > 5
-- SELECT * FROM Produk WHERE id_Produk <= 13
-- SELECT * FROM Produk WHERE Nama_Produk = 'Cushion'
-- SELECT * FROM Produk WHERE Kategori = 'Makeup'
-- SELECT * FROM Produk WHERE Kategori <> 'Makeup'
-- SELECT * FROM Produk WHERE Harga > 50000
-- SELECT * FROM Produk WHERE Harga < 50000
-- SELECT * FROM Produk WHERE Harga = 45000
-- SELECT * FROM Produk WHERE Harga <> 30000
-- SELECT * FROM Produk WHERE Stok >= 15
-- SELECT * FROM Produk WHERE Stok < 15
-- SELECT * FROM Produk WHERE Stok <> 25
-- SELECT * FROM Produk WHERE Deskripsi = 'Melembabkan'
-- SELECT * FROM Produk WHERE Deskripsi = 'Melembabkan' AND Kategori = 'Skincare'
-- SELECT * FROM Produk WHERE Deskripsi = 'Melembabkan' OR Kategori = 'Makeup'
-- SELECT * FROM Produk WHERE harga > 15000 AND (kategori='Makeup' OR kategori='Skincare')
-- SELECT * FROM Produk WHERE NOT Deskripsi = 'Melembabkan' AND Kategori = 'Skincare'
-- SELECT *, harga / 2 AS Separuh_Harga FROM Produk
-- SELECT *, Stok * 2 AS DuaKali_Lipat FROM Produk
-- SELECT * FROM Produk WHERE (Stok % 2) = 0
-- SELECT * FROM Produk WHERE (Stok % 2) <> 0
-- SELECT * FROM Produk WHERE id_Produk IN(1,15)
-- SELECT * FROM Produk WHERE Harga IN(20000,100000)
-- SELECT * FROM Produk WHERE Stok NOT IN(25,75)
-- SELECT * FROM Produk WHERE Stok NOT IN(25,75)
-- SELECT * FROM Produk WHERE Nama_Produk LIKE '%er'
-- SELECT * FROM Produk WHERE Nama_Produk LIKE 'M%'
-- SELECT * FROM Produk WHERE Deskripsi LIKE 'S%'
-- SELECT * FROM Produk WHERE Stok BETWEEN 15 AND 50
-- SELECT * FROM Produk WHERE Harga NOT BETWEEN 40000 AND 70000
-- SELECT SUM(Harga) FROM Produk
-- SELECT * FROM Produk ORDER BY Nama_Produk DESC
-- SELECT * FROM Produk WHERE Harga is null
-- SELECT MIN (Harga) AS Price, MIN (Stok) AS STIK FROM Produk
-- SELECT id_Produk, SUM (Stok) AS S FROM Produk GROUP BY id_Produk HAVING SUM (Stok) > 10;
-- SELECT SUM(Harga) FROM Produk WHERE id_Produk = '13'
-- SELECT Produk.id_Produk, Produk.Kategori, Pemesanan.id_Pemesanan, Pemesanan.Jumlah_Produk FROM Produk INNER JOIN Pemesanan ON Produk.id_Produk = Pemesanan.id_Produk
-- SELECT id_produk, stok from produk
-- GROUP BY id_produk HAVING stok > 10

--//PEMESANAN
-- SELECT * FROM Pemesanan ORDER BY Jumlah_Produk ASC
-- SELECT * FROM Pemesanan WHERE Tanggal_Pemesanan BETWEEN '2023-04-10' AND '2023-05-10'
-- SELECT * FROM Pemesanan WHERE Total_Harga NOT BETWEEN 20000 AND 50000
-- SELECT * FROM Pemesanan WHERE NOT Jumlah_Produk = 2
-- SELECT * FROM Pemesanan WHERE Total_Harga < 100000
-- SELECT * FROM Pemesanan WHERE Tanggal_Pemesanan <= '2023-07-03'
-- SELECT * FROM Pemesanan WHERE Tanggal_Pemesanan > '2023-10-10'
-- SELECT MAX (Jumlah_Produk) AS jlh, MIN (Total_Harga) AS ttl FROM Pemesanan
-- SELECT id_Produk, SUM(STOK) AS S FROM Produk GROUP BY id_Produk HAVING (Stok > 10)
-- SELECT * FROM Pemesanan WHERE Total_Produk is null
-- SELECT * FROM Pemesanan WHERE id_Pemesanan IN (1101,1109)
-- SELECT * FROM Pemesanan WHERE id_Pemesanan > 1005 LIMIT 5 OFFSET 3
-- SELECT * FROM Pemesanan WHERE Tanggal_Pemesanan ASC

--//TRANSAKSI
--SELECT * FROM Transaksi
--DELETE FROM Pemesanan WHERE id_Pemesanan = 1106
--UPDATE Transaksi SET Metode_Pembayaran = 'Bank BRI' WHERE id_transaksi = 102
--SELECT * FROM Transaksi WHERE Total_Pembayaran > 30000
--SELECT * FROM Transaksi WHERE Biaya_Penanganan <> 1000
--SELECT * FROM Transaksi WHERE Total_Diskon = 8000
--SELECT * FROM Transaksi WHERE (Total_Diskon % 2) = 1
--SELECT * FROM Transaksi WHERE Metode_Pembayaran= 'ShopeePay' AND Biaya_Layanan = '1000'
--SELECT * FROM Transaksi WHERE Biaya_Penanganan='11000' OR Biaya_Penanganan='5000'
--SELECT * FROM Transaksi WHERE NOT Total_Pembayaran < 50000
--SELECT * FROM Transaksi WHERE Total_Pembayaran is null
--SELECT * FROM Transaksi WHERE id_Transaksi (105,108,110)
--SELECT * FROM Transaksi WHERE id_Pemesanan NOT IN(1107,1111,1103)
--SELECT * FROM Transaksi WHERE Total_Pembayaran BETWEEN 25000 AND 50000
--SELECT * FROM Transaksi WHERE Total_Diskon NOT BETWEEN  5000 AND 9000
--SELECT * FROM Transaksi WHERE Metode_Pembayaran LIKE '%ri'
--SELECT * FROM Transaksi WHERE Metode_Pembayaran LIKE 'B%'
--SELECT * FROM Transaksi WHERE Metode_Pembayaran LIKE '%e%'
--SELECT * FROM Transaksi WHERE id_Transaksi >106 LIMIT 4
--SELECT * FROM Transaksi WHERE id_Transaksi >106 LIMIT 4 OFFSET 2
--SELECT * FROM Transaksi ORDER BY Total_Pembayaran DESC
--SELECT * FROM Transaksi ORDER BY Total_Diskon ASC
--SELECT Metode_Pembayaran AS Mp FROM Transaksi
--SELECT Biaya_Layanan AS BL , Biaya_Penanganan AS BP FROM Transaksi
--SELECT DISTINCT Metode_Pembayaran FROM Transaksi
--SELECT DISTINCT Metode_Pembayaran FROM Transaksi
--SELECT COUNT(Total_Pembayaran) AS 'TP' FROM Transaksi
--SELECT Total_Diskon FROM Transaksi GROUP BY Total_Diskon
-- SELECT AVG (Total_Pembayaran) AS Total FROM Transaksi
--SELECT MAX (Total_Pembayaran) FROM Transaksi
--SELECT MIN (Total_Diskon)FROM Transaksi
--SELECT SUM (Biaya_Penanganan) From Transaksi
--SELECT AVG (Total_Diskon) FROM Transaksi
-- SELECT metode_pembayaran, SUM(Total_Pembayaran) AS SM, AVG(Total_Pembayaran) AS RT FROM Transaksi GROUP BY metode_pembayaran ORDER BY SM DESC
-- SELECT Pemesanan.Tanggal_Pemesanan, Pengiriman.Tgl_Pengiriman FROM Pemesanan RIGHT JOIN Pengiriman ON Pemesanan.id_Pemesanan = Pengiriman.id_Pemesanan
-- SELECT DISTINCT Metode_Pembayaran FROM Transaksi
-- SELECT *, (Total_Diskon - (Biaya_Layanan+Biaya_Penanganan)) AS untung FROM Transaksi

--//PENGIRIMAN
-- SELECT * FROM Pengiriman
-- SELECT * FROM Pengiriman WHERE Tgl_Pengiriman > '2023-06-10'
-- SELECT * FROM Pengiriman WHERE id_Pengiriman IN (673,732)
-- SELECT * FROM Pengiriman WHERE Tgl_Pengiriman > (NOW() - interval '2 week')

SELECT CONCAT_WS(" ", first_name, last_name) AS whole_name FROM users
